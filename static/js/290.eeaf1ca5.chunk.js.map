{"version":3,"file":"static/js/290.eeaf1ca5.chunk.js","mappings":"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","sources":["common/SvgIcon/index.tsx","components/ContentBlock/styles.ts","components/ContentBlock/index.tsx"],"sourcesContent":["import { SvgIconProps } from \"../types\";\r\n\r\nexport const SvgIcon = ({ src, width, height }: SvgIconProps) => (\r\n  <img src={`/img/svg/${src}`} alt={src} width={width} height={height} />\r\n);\r\n","import { Row } from \"antd\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const ContentSection = styled(\"section\")`\r\n  position: relative;\r\n  padding: 10rem 0 8rem;\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    padding: 4rem 0 4rem;\r\n  }\r\n`;\r\n\r\nexport const Content = styled(\"p\")`\r\n  margin: 1.5rem 0 2rem 0;\r\n`;\r\n\r\nexport const StyledRow = styled(Row)`\r\n  flex-direction: ${({ direction }: { direction: string }) =>\r\n    direction === \"left\" ? \"row\" : \"row-reverse\"};\r\n`;\r\n\r\nexport const ContentWrapper = styled(\"div\")`\r\n  position: relative;\r\n  max-width: 540px;\r\n\r\n  @media only screen and (max-width: 575px) {\r\n    padding-top: 4rem;\r\n  }\r\n`;\r\n\r\nexport const ServiceWrapper = styled(\"div\")`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 100%;\r\n`;\r\n\r\nexport const MinTitle = styled(\"h6\")`\r\n  font-size: 15px;\r\n  line-height: 1rem;\r\n  padding: 0.5rem 0;\r\n  text-transform: uppercase;\r\n  color: #000;\r\n  font-family: \"Motiva Sans Light\", sans-serif;\r\n`;\r\n\r\nexport const MinPara = styled(\"p\")`\r\n  font-size: 13px;\r\n`;\r\n\r\nexport const ButtonWrapper = styled(\"div\")`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 100%;\r\n\r\n  @media screen and (min-width: 1024px) {\r\n    max-width: 80%;\r\n  }\r\n\r\n  button:last-child {\r\n    margin-left: 20px;\r\n  }\r\n`;\r\n","import { Row, Col } from \"antd\";\r\nimport { Fade } from \"react-awesome-reveal\";\r\nimport { withTranslation } from \"react-i18next\";\r\n\r\nimport { ContentBlockProps } from \"./types\";\r\nimport { Button } from \"../../common/Button\";\r\nimport { SvgIcon } from \"../../common/SvgIcon\";\r\nimport {\r\n  ContentSection,\r\n  Content,\r\n  ContentWrapper,\r\n  ServiceWrapper,\r\n  MinTitle,\r\n  MinPara,\r\n  StyledRow,\r\n  ButtonWrapper,\r\n} from \"./styles\";\r\n\r\nconst ContentBlock = ({\r\n  title,\r\n  content,\r\n  section,\r\n  button,\r\n  t,\r\n  id,\r\n  direction,\r\n}: ContentBlockProps) => {\r\n  const scrollTo = (id: string) => {\r\n    const element = document.getElementById(id) as HTMLDivElement;\r\n    element.scrollIntoView({\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <ContentSection>\r\n      <Fade direction={direction} triggerOnce>\r\n        <StyledRow\r\n          justify=\"space-between\"\r\n          align=\"middle\"\r\n          id={id}\r\n          direction={direction}\r\n        >\r\n          <Col lg={11} md={11} sm={11} xs={24}>\r\n            <ContentWrapper>\r\n              <h6>{t(title)}</h6>\r\n              <Content>{t(content)}</Content>\r\n              {direction === \"right\" ? (\r\n                <ButtonWrapper>\r\n                  {typeof button === \"object\" &&\r\n                    button.map(\r\n                      (\r\n                        item: {\r\n                          color?: string;\r\n                          title: string;\r\n                        },\r\n                        id: number\r\n                      ) => {\r\n                        return (\r\n                          <Button\r\n                            key={id}\r\n                            color={item.color}\r\n                            onClick={() => scrollTo(\"about\")}\r\n                          >\r\n                            {t(item.title)}\r\n                          </Button>\r\n                        );\r\n                      }\r\n                    )}\r\n                </ButtonWrapper>\r\n              ) : (\r\n                <ServiceWrapper>\r\n                  <Row justify=\"space-between\">\r\n                    {typeof section === \"object\" &&\r\n                      section.map(\r\n                        (\r\n                          item: {\r\n                            title: string;\r\n                            content: string;\r\n                            icon: string;\r\n                          },\r\n                          id: number\r\n                        ) => {\r\n                          return (\r\n                            <Col key={id} span={11}>\r\n                              <SvgIcon\r\n                                src={item.icon}\r\n                                width=\"60px\"\r\n                                height=\"60px\"\r\n                              />\r\n                              <MinTitle>{t(item.title)}</MinTitle>\r\n                              <MinPara>{t(item.content)}</MinPara>\r\n                            </Col>\r\n                          );\r\n                        }\r\n                      )}\r\n                  </Row>\r\n                </ServiceWrapper>\r\n              )}\r\n            </ContentWrapper>\r\n          </Col>\r\n        </StyledRow>\r\n      </Fade>\r\n    </ContentSection>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(ContentBlock);\r\n"],"names":["SvgIcon","_ref","src","width","height","_jsx","concat","alt","ContentSection","styled","_templateObject","_taggedTemplateLiteral","Content","_templateObject2","StyledRow","Row","_templateObject3","direction","ContentWrapper","_templateObject4","ServiceWrapper","_templateObject5","MinTitle","_templateObject6","MinPara","_templateObject7","ButtonWrapper","_templateObject8","withTranslation","title","content","section","button","t","id","children","Fade","triggerOnce","justify","align","Col","lg","md","sm","xs","_jsxs","map","item","Button","color","onClick","document","getElementById","scrollIntoView","behavior","scrollTo","span","icon"],"sourceRoot":""}