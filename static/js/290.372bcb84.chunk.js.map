{"version":3,"file":"static/js/290.372bcb84.chunk.js","mappings":"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","sources":["common/Button/styles.ts","common/Button/index.tsx","common/SvgIcon/index.tsx","components/ContentBlock/styles.ts","components/ContentBlock/index.tsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const StyledButton = styled(\"button\")<{ color?: string }>`\r\n  background: ${(p) => p.color || \"#18216d\"};\r\n  color: ${(p) => (p.color ? \"#18216d\" : \"#fff\")};\r\n  font-size: 1rem;\r\n  font-weight: 700;\r\n  width: 100%;\r\n  border: 1px solid #edf3f5;\r\n  border-radius: 4px;\r\n  padding: 13px 0;\r\n  cursor: pointer;\r\n  margin-top: 0.625rem;\r\n  max-width: 180px;\r\n  transition: all 0.3s ease-in-out;\r\n  box-shadow: 0 16px 30px rgb(23 31 114 / 20%);\r\n\r\n  &:hover,\r\n  &:active,\r\n  &:focus {\r\n    color: #fff;\r\n    border: 1px solid rgb(255, 130, 92);\r\n    background-color: rgb(255, 130, 92);\r\n  }\r\n`;\r\n","import { StyledButton } from \"./styles\";\r\nimport { ButtonProps } from \"../types\";\r\n\r\nexport const Button = ({ color, children, onClick }: ButtonProps) => (\r\n  <StyledButton color={color} onClick={onClick}>\r\n    {children}\r\n  </StyledButton>\r\n);\r\n","import { SvgIconProps } from \"../types\";\r\n\r\nexport const SvgIcon = ({ src, width, height }: SvgIconProps) => (\r\n  <img src={`/img/svg/${src}`} alt={src} width={width} height={height} />\r\n);\r\n","import { Row } from \"antd\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const ContentSection = styled(\"section\")`\r\n  position: relative;\r\n  padding: 10rem 0 8rem;\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    padding: 4rem 0 4rem;\r\n  }\r\n`;\r\n\r\nexport const Content = styled(\"p\")`\r\n  margin: 1.5rem 0 2rem 0;\r\n`;\r\n\r\nexport const StyledRow = styled(Row)`\r\n  flex-direction: ${({ direction }: { direction: string }) =>\r\n    direction === \"left\" ? \"row\" : \"row-reverse\"};\r\n`;\r\n\r\nexport const ContentWrapper = styled(\"div\")`\r\n  position: relative;\r\n  max-width: 540px;\r\n\r\n  @media only screen and (max-width: 575px) {\r\n    padding-top: 4rem;\r\n  }\r\n`;\r\n\r\nexport const ServiceWrapper = styled(\"div\")`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 100%;\r\n`;\r\n\r\nexport const MinTitle = styled(\"h6\")`\r\n  font-size: 15px;\r\n  line-height: 1rem;\r\n  padding: 0.5rem 0;\r\n  text-transform: uppercase;\r\n  color: #000;\r\n  font-family: \"Motiva Sans Light\", sans-serif;\r\n`;\r\n\r\nexport const MinPara = styled(\"p\")`\r\n  font-size: 13px;\r\n`;\r\n\r\nexport const ButtonWrapper = styled(\"div\")`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 100%;\r\n\r\n  @media screen and (min-width: 1024px) {\r\n    max-width: 80%;\r\n  }\r\n\r\n  button:last-child {\r\n    margin-left: 20px;\r\n  }\r\n`;\r\n","import { Row, Col } from \"antd\";\r\nimport { Fade } from \"react-awesome-reveal\";\r\nimport { withTranslation } from \"react-i18next\";\r\n\r\nimport { ContentBlockProps } from \"./types\";\r\nimport { Button } from \"../../common/Button\";\r\nimport { SvgIcon } from \"../../common/SvgIcon\";\r\nimport {\r\n  ContentSection,\r\n  Content,\r\n  ContentWrapper,\r\n  ServiceWrapper,\r\n  MinTitle,\r\n  MinPara,\r\n  StyledRow,\r\n  ButtonWrapper,\r\n} from \"./styles\";\r\n\r\nconst ContentBlock = ({\r\n  title,\r\n  content,\r\n  section,\r\n  button,\r\n  t,\r\n  id,\r\n  direction,\r\n}: ContentBlockProps) => {\r\n  const scrollTo = (id: string) => {\r\n    const element = document.getElementById(id) as HTMLDivElement;\r\n    element.scrollIntoView({\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <ContentSection>\r\n      <Fade direction={direction} triggerOnce>\r\n        <StyledRow\r\n          justify=\"space-between\"\r\n          align=\"middle\"\r\n          id={id}\r\n          direction={direction}\r\n        >\r\n          <Col lg={11} md={11} sm={11} xs={24}>\r\n            <ContentWrapper>\r\n              <h6>{t(title)}</h6>\r\n              <Content>{t(content)}</Content>\r\n              {direction === \"right\" ? (\r\n                <ButtonWrapper>\r\n                  {typeof button === \"object\" &&\r\n                    button.map(\r\n                      (\r\n                        item: {\r\n                          color?: string;\r\n                          title: string;\r\n                        },\r\n                        id: number\r\n                      ) => {\r\n                        return (\r\n                          <Button\r\n                            key={id}\r\n                            color={item.color}\r\n                            onClick={() => scrollTo(\"about\")}\r\n                          >\r\n                            {t(item.title)}\r\n                          </Button>\r\n                        );\r\n                      }\r\n                    )}\r\n                </ButtonWrapper>\r\n              ) : (\r\n                <ServiceWrapper>\r\n                  <Row justify=\"space-between\">\r\n                    {typeof section === \"object\" &&\r\n                      section.map(\r\n                        (\r\n                          item: {\r\n                            title: string;\r\n                            content: string;\r\n                            icon: string;\r\n                          },\r\n                          id: number\r\n                        ) => {\r\n                          return (\r\n                            <Col key={id} span={11}>\r\n                              <SvgIcon\r\n                                src={item.icon}\r\n                                width=\"60px\"\r\n                                height=\"60px\"\r\n                              />\r\n                              <MinTitle>{t(item.title)}</MinTitle>\r\n                              <MinPara>{t(item.content)}</MinPara>\r\n                            </Col>\r\n                          );\r\n                        }\r\n                      )}\r\n                  </Row>\r\n                </ServiceWrapper>\r\n              )}\r\n            </ContentWrapper>\r\n          </Col>\r\n        </StyledRow>\r\n      </Fade>\r\n    </ContentSection>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(ContentBlock);\r\n"],"names":["StyledButton","styled","_templateObject","_taggedTemplateLiteral","p","color","Button","_ref","children","onClick","_jsx","SvgIcon","src","width","height","concat","alt","ContentSection","Content","_templateObject2","StyledRow","Row","_templateObject3","direction","ContentWrapper","_templateObject4","ServiceWrapper","_templateObject5","MinTitle","_templateObject6","MinPara","_templateObject7","ButtonWrapper","_templateObject8","withTranslation","title","content","section","button","t","id","Fade","triggerOnce","justify","align","Col","lg","md","sm","xs","_jsxs","map","item","document","getElementById","scrollIntoView","behavior","scrollTo","span","icon"],"sourceRoot":""}